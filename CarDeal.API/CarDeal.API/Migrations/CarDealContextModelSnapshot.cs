// <auto-generated />
using System;
using CarDeal.API.Services.EF.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarDeal.API.Migrations
{
    [DbContext(typeof(CarDealContext))]
    partial class CarDealContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BodyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Coupe"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Cabriolet"
                        },
                        new
                        {
                            Id = 3,
                            Type = "SUV"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Sedan"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Compact"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Combi"
                        },
                        new
                        {
                            Id = 7,
                            Type = "Other"
                        });
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.CarAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BodyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MerchantEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantTelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleBrandId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("VehicleBrandId");

                    b.ToTable("CarAds");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FuelType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Diesel"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Electric"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Petrol"
                        },
                        new
                        {
                            Id = 4,
                            Type = "LPG"
                        });
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.PhotoAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarAdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarAdId");

                    b.ToTable("PhotoAddress");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Opel"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Audi"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Volkswagen"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Ford"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Renault"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Toyota"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Skoda"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Other"
                        });
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.CarAd", b =>
                {
                    b.HasOne("CarDeal.API.Services.EF.Entities.Cars.BodyType", "BodyType")
                        .WithMany("CarAds")
                        .HasForeignKey("BodyTypeId");

                    b.HasOne("CarDeal.API.Services.EF.Entities.Cars.FuelType", "FuelType")
                        .WithMany("CarAds")
                        .HasForeignKey("FuelTypeId");

                    b.HasOne("CarDeal.API.Services.EF.Entities.Cars.VehicleBrand", "VehicleBrand")
                        .WithMany("CarAds")
                        .HasForeignKey("VehicleBrandId");

                    b.Navigation("BodyType");

                    b.Navigation("FuelType");

                    b.Navigation("VehicleBrand");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.PhotoAddress", b =>
                {
                    b.HasOne("CarDeal.API.Services.EF.Entities.Cars.CarAd", null)
                        .WithMany("PhotoAddresses")
                        .HasForeignKey("CarAdId");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.BodyType", b =>
                {
                    b.Navigation("CarAds");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.CarAd", b =>
                {
                    b.Navigation("PhotoAddresses");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.FuelType", b =>
                {
                    b.Navigation("CarAds");
                });

            modelBuilder.Entity("CarDeal.API.Services.EF.Entities.Cars.VehicleBrand", b =>
                {
                    b.Navigation("CarAds");
                });
#pragma warning restore 612, 618
        }
    }
}
